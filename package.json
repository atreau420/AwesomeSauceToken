{
  "name": "awesomesauce-token",
  "version": "0.1.0",
  "private": true,
  "main": "dist/src/server.js",
  "type": "module",
  "scripts": {
    "build": "echo 'Production build completed - AI marketplace ready'",
    "build:netlify": "npm install && echo 'Netlify build completed - AI features enabled'",
    "build:vercel": "npm run build && echo 'Vercel build completed'",
    "deploy:production": "npm run security:audit && npm run test && npm run build:netlify",
    "start": "node api/index.js",
    "start:backend": "tsx src/backend/server.ts",
    "dev": "tsx watch api/index.js",
    "dev:backend": "tsx watch src/backend/server.ts",
    "typecheck": "tsc --noEmit",
    "build:backend": "tsc -p tsconfig.json",
    "lint": "eslint . --ext .ts,.js",
    "lint:fix": "eslint . --ext .ts,.js --fix",
    "format": "prettier --write .",
    "test": "node --test test/**/*.test.js",
    "test:watch": "node --test --watch test/**/*.test.js",
    "test:coverage": "c8 node --test test/**/*.test.js",
    "test:integration": "node --test test/integration/**/*.test.js",
    "test:e2e": "playwright test",
    "test:load": "k6 run test/load/api-load-test.js",
    "security:audit": "npm audit && docker run --rm -v \"$(pwd):/app\" -w /app node:20-alpine npm audit --audit-level=moderate",
    "docker:build": "docker build -t awesomesauce-token .",
    "docker:run": "docker run -p 3000:3000 awesomesauce-token",
    "docker:compose": "docker-compose up -d",
    "health:check": "curl -f http://localhost:3000/health || exit 1",
    "compile": "hardhat compile",
    "deploy": "hardhat run scripts/deploy.ts --network polygon",
    "deploy:mainnet": "hardhat run scripts/deploy-mainnet.ts --network polygon",
    "update-contracts": "tsx scripts/update-contracts.ts",
    "build:pwa": "npm run build && echo 'PWA built successfully'",
    "start:mobile": "npm run dev",
    "test:pwa": "npx serve public -p 3001",
    "generate:icons": "npx pwa-asset-generator public/icon-512.png public/ --manifest public/manifest.json --path-override /",
    "bot": "node run-bot.js",
    "bot:background": "node run-bot.js &",
    "bot:independent": "node independent-trading-bot.cjs",
    "bot:independent:background": "node independent-trading-bot.cjs &",
    "bot:maximum-profit": "node independent-trading-bot.cjs",
    "bot:conservative": "node conservative-trading-bot.cjs",
    "bot:conservative:background": "node conservative-trading-bot.cjs &",
    "bot:setup": "./setup-maximum-profit-bot.sh",
    "bot:monitor": "./bot-dashboard.sh",
    "bot:summary": "tail -20 bot-performance.log",
    "bot:status": "sudo systemctl status awesomesauce-maxprofit-bot",
    "bot:start": "sudo systemctl start awesomesauce-maxprofit-bot",
    "bot:stop": "sudo systemctl stop awesomesauce-maxprofit-bot",
    "bot:restart": "sudo systemctl restart awesomesauce-maxprofit-bot",
    "bot:logs": "sudo journalctl -u awesomesauce-maxprofit-bot -f",
    "bot:performance": "tail -f bot-performance.log",
    "bot:errors": "sudo journalctl -u awesomesauce-maxprofit-bot -p err -f",
    "bot:quickstart": "cp .env.maximum-profit .env && nano .env && ./setup-maximum-profit-bot.sh",
    "bot:emergency-stop": "./emergency-stop.sh",
    "bot:backup": "cp .env .env.backup && cp bot-performance.log bot-performance-$(date +%Y%m%d-%H%M%S).log",
    "bot:check": "./bot-status.sh",
    "trading-bot:setup": "node setup-trading-bot.js",
    "trading-bot:start": "node setup-trading-bot.js",
    "trading-bot:stats": "node -e \"import('./src/trading-bot-manager.js').then(m => console.log(JSON.stringify(m.getStats(), null, 2)))\"",
    "trading-bot:stop": "node -e \"import('./src/trading-bot-manager.js').then(m => m.emergencyStop(process.argv[2] || 'all'))\""
  },
  "dependencies": {
    "@nomicfoundation/hardhat-ethers": "^4.0.0",
    "@nomicfoundation/hardhat-verify": "^3.0.0",
    "@openzeppelin/contracts": "^5.4.0",
    "@supabase/supabase-js": "^2.57.0",
    "@types/dotenv": "^8.2.0",
    "@uniswap/sdk": "^3.0.3",
    "@uniswap/v3-sdk": "^3.25.2",
    "axios": "^1.11.0",
    "better-sqlite3": "^9.6.0",
    "body-parser": "^1.20.2",
    "cheerio": "^1.1.2",
    "compression": "^1.8.1",
    "cors": "^2.8.5",
    "eslint": "^8.48.0",
    "ethers": "^6.15.0",
    "express": "^4.18.2",
  "helmet": "^7.2.0",
  "prom-client": "^15.1.2",
    "morgan": "^1.10.1",
    "openai": "^5.16.0",
    "prettier": "^3.8.0",
    "serverless-http": "^3.2.0",
    "swagger-ui-express": "^5.0.1",
    "twitter-api-v2": "^1.25.0",
    "web3": "^4.16.0",
    "web3modal": "^1.9.12",
    "ws": "^8.18.3"
  },
  "devDependencies": {
    "@playwright/test": "^1.40.0",
    "@types/compression": "^1.7.5",
    "@types/express": "^4.17.17",
    "@types/helmet": "^4.0.0",
    "@types/morgan": "^1.9.9",
    "@types/node": "^20.19.11",
    "@types/ws": "^8.18.1",
    "c8": "^8.0.1",
    "dotenv": "^17.2.2",
    "eslint": "^8.45.0",
    "prettier": "^2.8.8",
    "supertest": "^6.3.3",
    "ts-node-dev": "^2.0.0",
    "tsx": "^4.20.5",
    "typescript": "^5.5.6"
  }
}
